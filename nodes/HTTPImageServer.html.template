<!DOCTYPE html>
<html>
<head>
<style type="text/css">
  body, html {height: 100%; margin: 0; padding: 0}

  body {background: #FFF; color: #000;}

  p {display: table-cell; vertical-align: middle; text-align: center}

  div.canvas {top: 0; left: 0; width: 100%; height: 100%;
    position: absolute; display: table; text-align: center; z-index: 10}

  #tag_name {top: 1em; left: 0; width: 100%; height: 100%;
    position: absolute; display: table; text-align: center; z-index: 20}
  
  img.displayed {display: block; margin: 1em auto}
  
  #language {display: none}
  
  #translations {position: absolute; top: 0; right: 0; color: white;
    text-shadow: none; margin: 0.5em; font-size: small;
    background: #474; border-radius: 1em; padding: 0 0.5em}
    
  #translations h2, #translations p, #translations a {display: block;
    text-align: center; font-size: 100%}
</style>

<meta charset="utf-8" />
<script>
  var POLL_DELAY_MS = 100;
  var curr_image_path = " ";
  
  
  function updateImage(size, rot, path) {
    document.getElementById("img").width = size;
    document.getElementById("img").height = size;
    document.getElementById("img").src = "images/" + path;
    if (rot != 0) {
      document.getElementById("img").style.MozTransform = "rotate(" + rot + "deg)";
      document.getElementById("img").style.webkitTransform = "rotate(" + rot + "deg)";
    }
  }


  function pollServer(ack) {
    // Obtain async request
    var req = false;
    try {
      req = new XMLHttpRequest(); // Firefox, Opera 8.0+, Safari
    } catch (e) {
      try {
        req = new ActiveXObject("Msxml2.XMLHTTP"); // Internet Explorer
      } catch (e) {
        try {
          req = new ActiveXObject("Microsoft.XMLHTTP");
        } catch (e) { 
          alert("Your browser does not support AJAX!");
          return false;
        }
      }
    }
    
    if (ack === undefined) { // Poll for new image
      req.open("POST", "poll", true); // POST asynchronously with URL=="poll"
      req.onreadystatechange = function() {
        if (req.readyState == 4) {
          if (req.status == 200) {
            handlePollResponse(req);
          } else { // POST request failed, so stop polling
            handlePollFailure(req);
          }
        }
      };
      req.onerror = function(e) {
        document.getElementById('tag_name').innerHTML = 'Poll POST failed (server down?)';
      };
      req.send();
      
    } else { // Send acknowledgement of image loaded
      req.open("POST", "ack", true); // POST asynchronously with URL=="ack"
      req.onerror = function(e) {
        document.getElementById('tag_name').innerHTML = 'Ack POST failed (server down?)';
      };
      // no need to handle server success/failure
      req.send(ack);
    }
  };


  function handlePollResponse(req) {
    if (req.responseText.length > 0 && req.responseText != curr_image_path) { // server indicating new image to display
      curr_image_path = req.responseText;
      document.getElementById('tag_name').innerHTML = 'Img: ' + curr_image_path;
      var maxTagSize = Math.min(window.screen.availWidth, window.screen.availHeight);
      updateImage(maxTagSize*(0.79), 0, curr_image_path); // tag size: 7.2cm
      // NOTE: do not poll again until image has loaded (see handleImgLoaded)
      
    } else { // server indicating no new images to display, so poll again
      initDelayedPoll();
    }
  };


  function handlePollFailure(req) {
    document.getElementById('tag_name').innerHTML = 'Poll POST failed: ' + req.status;
  };
  
  
  function initDelayedPoll() {
    setTimeout(pollServer, POLL_DELAY_MS);
  };
  
  
  function handleImgLoaded() {
    pollServer(curr_image_path);
    initDelayedPoll();
  };
</script>
</head>

<body onload="initDelayedPoll()">
  <div class="canvas"><img id="img" class="displayed" onload="handleImgLoaded()"></div>
  <div id="tag_name" align="center"></div>
</body>
</html>
